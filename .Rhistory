blogdown::hugo_build(local=TRUE)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
install.packages("markdown")
install.packages("blogdown")
q()
species.data <- read.table("galapagos.dat",header=TRUE)
setwd("~/PhD/London NERC DTP documents/Sessions/Week 6/R/StatsPrep")
setwd("~/PhD/London NERC DTP documents/Sessions/Week 6/R/StatsPrep")
species.data <- read.table("galapagos.dat",header=TRUE)
View(species.data)
species.data
head(species.data)
names(species.data)
summary(species.data)
plot(species.data)
big.island <- (species.data$Area > 3000)
big.island
species.data[big.island,]
plot(species.data$Elevation,species.data$Endemics)
plot(species.data$Elevation,species.data$Endemics,
+ xlab="Elevation (m)",ylab="No. of species",
plot(species.data$Elevation,species.data$Endemics,
xlab="Elevation (m)",
ylab="No. of species",
main="Variation of endemic species numbers with\nisland elevation",
pch=15,col="blue")
box(lwd=2)
dev.copy(pdf,"endemics.pdf",width=6,height=6)
dev.off()
endemics.model <- lm(Endemics ~ Elevation, data=species.data)
endemics.model
summary(endemics.model)
abline(endemics.model, col="red", lty=2, lwd=2)
par(mfrow=c(2,2))
plot(endemics.model)
par(mfrow=c(1,1))
######  source(), in which case it writes all results to the     ######
######  file Galapagos_Results.txt. See the header to file       ######
######  R_SelfStudy.r for more details.                          ######
######                                                           ######
#######################################################################
#######################################################################
#######################################################################
##
##	Divert output to file
##
sink("Galapagos_Results.txt")
##
##	First step: read the data and produce summaries of each variable
##
species.data <- read.table("galapagos.dat",header=TRUE)
cat("\nSUMMARY OF DATA SET:\n")
cat("====================\n")
print(summary(species.data))
##
##	Plot the data ...
##
plot(species.data)
##
##	... and identify the outlying data point
##
big.island <- (species.data$Area > 3000)
cat("\nOUTLYING DATA POINT:\n")
cat("====================\n")
print(species.data[big.island,])
##
##	Plot Endemics vs Elevation (publication-quality), and output to PDF
##
plot(species.data$Elevation,species.data$Endemics,
xlab="Elevation (m)",ylab="No. of species",
main="Variation of endemic species numbers with\nisland elevation",
pch=15,col="blue")
if (length(install.paths) == 1) {
install.to <- install.paths
} else {
install.to <- menu(install.paths,graphics=TRUE,title="Select path for package installation")
install.to <- install.paths[install.to]
}
#######################################################################
######                                                           ######
######      R package installation for NERC DTP training         ######
######                                                           ######
#######################################################################
#######################################################################
#######################################################################
#
# Figure out where to install
#
install.paths <- .libPaths()
if (length(install.paths) == 1) {
install.to <- install.paths
} else {
install.to <- menu(install.paths,graphics=TRUE,title="Select path for package installation")
install.to <- install.paths[install.to]
}
#
# Identify a CRAN mirror site (Rstudio default can be dodgy)
#
chooseCRANmirror(graphics=TRUE)
#
#  Install packages from CRAN
#
cat("Installing packages from CRAN ...\n")
install.packages(pkgs=c("akima","boot","ca","car","cluster","coda","dlm",
"evd","faraway","fpc","gam","geoR","ggplot2","glmmML",
"gridExtra","ismev","lattice","LearnBayes","lme4","lmtest",
"MASS","mgcv","misc3d","nlme","ordinal","prabclus",
"RandomFields","rgl","robust","SemiPar","sm","sp",
"spatstat","tkrplot","vegan","R2OpenBUGS"),
lib=install.to,dependencies=TRUE)
#
#	Install rpanel (NB the CRAN version doesn't work due to changes in
# RandomFields - the version here is a pre-release version, obtained
# directly from Adrian Bowman). Also, R2OpenBUGS can be a bit pernickety
# on non-Windows systems and is therefore worth compiling directly.
#
if (.Platform$OS.type == "windows") {
install.packages("R2OpenBUGS",lib=install.to,dependencies=TRUE)
install.packages("rpanel_1.1-4.zip",repos=NULL,lib=install.to,dependencies=TRUE)
} else {
install.packages("R2OpenBUGS",type="source",lib=install.to,dependencies=TRUE)
install.packages("rpanel_1.1-4.tar.gz",type="source",repos=NULL,
lib=install.to,dependencies=TRUE)
}
blogdown:::preview_site()
blogdown:::preview_site()
library(bookdown)
library(blogdown)
blogdown:::preview_site()
blogdown::build_site()
logdown::serve_site()
blogdown::serve_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
---
bio: I am a Chartered Marine Scientist with an interest in geospatial data science.
blogdown:::preview_site()
blogdown:::preview_site()
